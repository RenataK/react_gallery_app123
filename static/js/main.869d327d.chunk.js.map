{"version":3,"sources":["components/SearchForm.js","components/Nav.js","components/Photo.js","components/NotFound.js","components/Gallery.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","userSearch","path","history","push","className","onSubmit","this","type","name","onChange","ref","input","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","Nav","to","Photo","src","url","alt","NotFound","Gallery","pics","results","data","length","map","pic","server","id","secret","tags","apiKey","App","performSearch","loading","axios","get","then","res","photos","photo","catch","err","console","log","sunsets","nature","puppies","prevState","location","pathname","includes","slice","exact","render","component","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oQAIMA,E,4MAEFC,MAAQ,CACJC,WAAY,I,EAIhBC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAIzCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKC,MAAML,OAC/BH,EAAES,cAAcC,QAChB,IAAIC,EAAa,EAAKd,MAAMC,WACxBc,EAAI,kBAAcD,GACtB,EAAKL,MAAMO,QAAQC,KAAKF,I,4CAG5B,WAAU,IAAD,OACL,OACA,qBAAKG,UAAU,YAAf,SACI,uBAAMA,UAAU,cAAcC,SAAUC,KAAKb,aAA7C,UACA,uBAAOc,KAAK,SACRC,KAAK,SACLC,SAAUH,KAAKlB,eACfsB,IAAM,SAACC,GAAD,OAAW,EAAKd,MAAQc,GAC9BC,YAAY,SAASC,UAAQ,IACjC,wBAAQN,KAAK,SAASH,UAAU,gBAAhC,SACA,sBAAKU,KAAK,OAAOC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,6BAAlE,UACI,sBAAMC,EAAE,+OACR,sBAAMA,EAAE,gBAAgBL,KAAK,uB,GAjCpBM,aA2CVC,cAAWpC,GC/BXqC,EAZH,WACR,OACI,qBAAKlB,UAAU,WAAf,SACA,+BACE,6BAAI,cAAC,IAAD,CAASmB,GAAG,WAAZ,uBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,UAAZ,sBACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,WAAZ,6BCACC,EARD,SAAC7B,GACX,OACI,+BACI,qBAAK8B,IAAK9B,EAAM+B,IAAKC,IAAI,KAD7B,QCUOC,EAXE,WACb,OACI,6BACI,qBAAIxB,UAAU,YAAd,UACI,kDACA,gGCuBDyB,EAxBC,SAAClC,GACb,IACImC,EADEC,EAAUpC,EAAMqC,KAEtB,OAAID,EAAQE,OAAS,GAClBH,EAAOC,EAAQG,KAAI,SAAAC,GAAG,OACjB,aADqB,CACpB,EAAD,CAAOT,IAAG,wCAAmCS,EAAIC,OAAvC,YAAiDD,EAAIE,GAArD,YAA2DF,EAAIG,OAA/D,WACDH,EAAIE,OASjB,sBAAKjC,UAAU,kBAAf,UACE,6BAAKT,EAAM4C,OADb,IAEI,+BACKT,EADL,WANA,cAAC,EAAD,KCjBGU,EADA,mCCoBPC,E,kDAGN,aAAe,IAAD,8BACZ,gBAkDFC,cAAgB,SAAC7C,GAEf,EAAKP,SAAS,CACZqD,SAAS,IAGXC,IAAMC,IAAN,oFAAuFL,EAAvF,iBAAsG3C,EAAtG,8CACCiD,MAAK,SAAAC,GACL,EAAKzD,SAAS,CACXwC,KAAMiB,EAAIf,KAAKgB,OAAOC,MACtBN,SAAS,EACT9C,MAAOA,OAGVqD,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,OAhEjD,EAAKjE,MAAQ,CACX4C,KAAM,GACNwB,QAAS,GACTC,OAAQ,GACRC,QAAS,GACT3D,MAAO,GACP8C,SAAS,GARC,E,qDAYd,WAAqB,IAAD,OAClBrC,KAAKhB,SAAS,CACZqD,SAAS,IAEXC,IAAMC,IAAN,oFAAuFL,EAAvF,2DACCM,MAAK,SAAAC,GACJ,EAAKzD,SAAS,CACZgE,QAASP,EAAIf,KAAKgB,OAAOC,MACzBN,SAAS,OAGZO,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,MAGjDP,IAAMC,IAAN,oFAAuFL,EAAvF,0DACCM,MAAK,SAAAC,GACJ,EAAKzD,SAAS,CACZiE,OAAQR,EAAIf,KAAKgB,OAAOC,MACxBN,SAAS,OAGZO,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,MAGjDP,IAAMC,IAAN,oFAAuFL,EAAvF,2DACCM,MAAK,SAAAC,GACJ,EAAKzD,SAAS,CACZkE,QAAST,EAAIf,KAAKgB,OAAOC,MACzBN,SAAS,OAGZO,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,Q,gCAyBnD,SAAmBM,GACbnD,KAAKX,MAAM+D,SAASC,SAASC,SAAS,YACpCtD,KAAKX,MAAM+D,SAASC,WAAaF,EAAUC,SAASC,UACtDrD,KAAKoC,cAAcpC,KAAKX,MAAM+D,SAASC,SAASE,MAAM,M,oBAQ5D,WAAU,IAAD,OACP,OACE,cAAC,IAAD,UACE,sBAAKzD,UAAU,YAAf,UACE,cAAC,EAAD,CAAYR,SAAUU,KAAKoC,gBAD7B,IAEE,cAAC,EAAD,IACA,qBAAKtC,UAAU,kBAAf,SAEGE,KAAKpB,MAAMyD,QACV,2CACA,eAAC,IAAD,eACE,cAAC,IAAD,CAAOmB,OAAK,EAAC7D,KAAK,IAAI8D,OAAS,kBAAM,cAAC,IAAD,CAAUxC,GAAG,gBADpD,IAEE,cAAC,IAAD,CAAOtB,KAAK,WAAW8D,OAAS,kBAAM,cAAC,EAAD,CAAS/B,KAAM,EAAK9C,MAAMoE,QAASf,KAAK,eAC9E,cAAC,IAAD,CAAOtC,KAAK,UAAU8D,OAAS,kBAAM,cAAC,EAAD,CAAS/B,KAAM,EAAK9C,MAAMqE,OAAQhB,KAAK,cAC5E,cAAC,IAAD,CAAOtC,KAAK,WAAW8D,OAAS,kBAAM,cAAC,EAAD,CAAS/B,KAAM,EAAK9C,MAAMsE,QAASjB,KAAK,eAC9E,cAAC,IAAD,CAAOtC,KAAK,iBAAiB8D,OAAS,kBAAM,cAAC,EAAD,CAAS/B,KAAM,EAAK9C,MAAM4C,KAAMS,KAAM,EAAKrD,MAAMW,WAL/F,IAME,cAAC,IAAD,CAAOmE,UAAWpC,kB,GArGdqC,iBA+GL5C,cAAWoB,GCvHXyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACA,eAAC,IAAD,eACE,cAAC,EAAD,SAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.869d327d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\n\n//statefull comp to manage seach field\nclass SearchForm extends Component {\n\n    state = {\n        searchText: ''\n    }\n\n    //searchText state gets updated when user types\n    onSearchChange = (e) => {\n        this.setState({ searchText: e.target.value });\n    }\n\n    //handleSubmit function gets called in the forms onSumbit handler\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSearch(this.query.value); //passing query that was given to onSearch func to access input value\n        e.currentTarget.reset(); //resets input field after submission\n        let userSearch = this.state.searchText; //storing input in a variable\n        let path = `/search/${userSearch}`; //storing path of search images \n        this.props.history.push(path); //using history obj to push the path to the url \n    }\n\n    render() {\n        return (\n        <div className=\"container\">\n            <form className=\"search-form\" onSubmit={this.handleSubmit} >\n            <input type=\"search\" \n                name=\"search\" \n                onChange={this.onSearchChange} \n                ref={ (input) => this.query = input } //using ref to access input value \n                placeholder=\"Search\" required/>\n            <button type=\"submit\" className=\"search-button\">\n            <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            </svg>\n            </button>\n            </form>\n         </div>\n        );\n    }\n}\n\n//wrapped the comp with `withRouter` to access history object \nexport default withRouter(SearchForm);\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\"; \n\n//using Navlink to style and keep navigation links active \nconst Nav = () => {\n    return (\n        <nav className=\"main-nav\">\n        <ul>\n          <li><NavLink to='/sunsets'>Sunsets</NavLink></li>\n          <li><NavLink to='/nature'>Nature</NavLink></li>\n          <li><NavLink to='/puppies'>Puppies</NavLink></li>\n        </ul>\n      </nav>\n    );\n}\n\nexport default Nav;","import React from 'react';\n\nconst Photo = (props) => {\n    return (\n        <li>\n            <img src={props.url} alt=\"\" /> {/*using props to display the url that was passed from Gallery */}\n        </li>\n    );\n}\n\nexport default Photo;","import React from 'react';\n\n//NotFound component that displays when no results are found\nconst NotFound = () => {\n    return (\n        <ul>\n            <li className=\"not-found\">\n                <h3>No Results Found</h3>\n                <p>Your search did not return any results. Please try again.</p>\n            </li>\n        </ul>\n    );\n}\n\nexport default NotFound;","//react import\nimport React from 'react';\n\n//component imports \nimport Photo from './Photo';\nimport NotFound from './NotFound';\n\nconst Gallery = (props) => { \n    const results = props.data; //data that was passed to Gallery in App.js\n    let pics;\n    if (results.length > 0) { //mapping thru results to determine if image is found\n       pics = results.map(pic => //mapping thru pics array and returning <Photo /> comp along with key prop\n            <Photo url={`https://live.staticflickr.com/${pic.server}/${pic.id}_${pic.secret}_w.jpg`}  \n                key={pic.id}\n            />    \n        );\n    } \n    else {\n    return  <NotFound />\n    }\n\n    return (\n        <div className=\"photo-container\">\n          <h2>{props.tags}</h2> {/*displying name of image */}\n            <ul>\n                {pics} {/*passing pics variable using JSX */}\n            </ul>\n        </div>\n    );\n}\n\nexport default Gallery;","const apiKey = 'b2db0b6fd51c50f0ac274ac8892279a9';\nexport default apiKey;","//Installed and imported axios, react and router components\nimport React, { PureComponent } from 'react';\nimport axios from 'axios';\nimport { \n  Route, \n  BrowserRouter, \n  Switch,\n  Redirect,\n  withRouter} from \"react-router-dom\";\n\n//App Comps\nimport SearchForm from './components/SearchForm';\nimport Nav from './components/Nav';\nimport Gallery from './components/Gallery';\nimport NotFound from './components/NotFound';\n\n//Api import \nimport apiKey from './config';\n\n//Statefull comp where data is managed \n  class App extends PureComponent {\n\n  //initialized state\n  constructor() {\n    super(); //calling super to use keyword 'this' inside constructor within App class context\n    this.state = {\n      pics: [], //searched photos \n      sunsets: [], \n      nature: [],\n      puppies: [],\n      query: [], //using query to pass the name of image displayed\n      loading: true\n    };\n  } \n  // Using axios to get the url for 3 default topics, setting loading indicator to false when data is fetched. \n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=sunsets&per_page=24&format=json&nojsoncallback=1`)\n    .then(res => {\n      this.setState({\n        sunsets: res.data.photos.photo, //updating sunsets state\n        loading: false\n      });\n    }) //gets excecuted when request is fulfilled \n    .catch(err => { //handles errors\n      console.log('Error fetching and parsing data', err);\n    });\n\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=nature&per_page=24&format=json&nojsoncallback=1`)\n    .then(res => {\n      this.setState({\n        nature: res.data.photos.photo,\n        loading: false\n      });\n    })\n    .catch(err => {\n      console.log('Error fetching and parsing data', err);\n    });\n\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=puppies&per_page=24&format=json&nojsoncallback=1`)\n    .then(res => {\n      this.setState({\n        puppies: res.data.photos.photo,\n        loading: false\n      });\n    })\n    .catch(err => {\n      console.log('Error fetching and parsing data', err);\n    });\n  }\n\n  //Using axios to get the url of the searched picture with query. \n  performSearch = (query) => { //using query to get the value of search field when user searches photos\n\n    this.setState({\n      loading: true //setting loading state to true before data is fetched\n    });\n  \n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n    .then(res => {\n     this.setState({\n        pics: res.data.photos.photo,\n        loading: false,\n        query: query\n      });\n    })\n    .catch(err => {\n      console.log('Error fetching and parsing data', err);\n    });\n  }\n\n  //function to sync url and query to display data using back/forward buttons\n  componentDidUpdate(prevState) {\n    if (this.props.location.pathname.includes('search/')) {\n      if (this.props.location.pathname !== prevState.location.pathname) {\n        this.performSearch(this.props.location.pathname.slice(8));\n      } \n    }\n  }\n\n  //wrapping in BrowserRouter to keep URL in sync and Switch to display the NotFound component when url isn't matched.\n  //using Route to render 3 default topics and the search route for images searched.\n  //passing data to gallery component via Route, along with tags for defining name of image displayed\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <SearchForm onSearch={this.performSearch}/> {/*giving onSearch prop to SearchForm which executes preformSearch func when called */}\n          <Nav />\n          <div className=\"photo-container\">\n          {\n            (this.state.loading)\n            ? <p>Loading...</p> //Displays loading indicator if data is being fetched\n            : <Switch> {/*renders list of photos when data is fetched*/}\n                <Route exact path=\"/\" render={ () => <Redirect to=\"/sunsets\" /> } /> {/*Redirects user to a default topic when path is / */}\n                <Route path=\"/sunsets\" render={ () => <Gallery data={this.state.sunsets} tags='Sunsets'/>} /> \n                <Route path=\"/nature\" render={ () => <Gallery data={this.state.nature} tags='Nature' />} /> \n                <Route path=\"/puppies\" render={ () => <Gallery data={this.state.puppies} tags='Puppies' />} /> \n                <Route path=\"/search/:query\" render={ () => <Gallery data={this.state.pics} tags={this.state.query} />} /> {/*passing query parameter to the url*/}\n                <Route component={NotFound} />\n              </Switch>\n          }\n          </div>\n        </div>\n    </BrowserRouter>\n    )\n  }\n}\n//exporting withRouter to access history obj in componentDidUpdate\nexport default withRouter(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter> {/*wrapped in BrowserRouter to export App Comp */}\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}